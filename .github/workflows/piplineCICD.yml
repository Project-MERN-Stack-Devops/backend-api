name : Pipeline CI/CD backend-api

on :
    push :
        branches :
            [main,master,dev]

env :
    BUILD_NUMBER: ${{ github.run_number }}
    IMAGE_NAME: adeem07/api-session14
    PROJECT_PATH: /home/user/devops-script/backend/dev
    DOCKER_SERVICE: backend-api
    

jobs:
  #unit test 
  Test_Unitaire:
    runs-on: ubuntu-latest 
    steps:
      - name: clone code 
        uses: actions/checkout@v5

      - name: install dependencies
        run: npm install

      - name: run unit tests
        run: npm run test
  
  #checkout code | clone car chaque job est separer et dans un runners specifique       
  #build and push image 
  #build image 
  #docker login 
  #docker push 
  build-and-push:
    runs-on: ubuntu-latest
    needs: Test_Unitaire
    steps: 
        - name: clone code 
          uses: actions/checkout@v5
        - name: build docker image
          run: docker build -t adeem07/api-session14 .

        # docker tag image
        - name: tag image 
          run: docker tag adeem07/api-session14 adeem07/api-session14:${{ github.run_number }}
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: list image 
          run: docker images  
          
        - name: push docker image
          run: docker push adeem07/api-session14:${{ github.run_number }}


  #deploy to vps
  Deployment_VPS:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Execute remote SSH commands using password
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }} 
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}   # default port 22  
          #dockerc ompose up -d --build                  
          script: |
            cd  ${{ env.PROJECT_PATH }}
            sudo docker compose pull ${{ env.DOCKER_SERVICE }}
            sudo docker compose down ${{ env.DOCKER_SERVICE }}
            sudo docker compose up -d 
            sudo docker compose ps     
          

                                     

